---
name: Build Rust binaries
on:
  push:
    tags:
      - 'v*'
env:
  BINARY_NAME: habit-tracker
  CARGO_TERM_COLOR: always
jobs:
  build:
    strategy:
      matrix:
        include:
          # -------- Linux --------
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: linux-amd64
            use_cross: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact: linux-arm64
            use_cross: true

          # -------- Windows --------
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: windows-amd64.exe
            use_cross: false
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            artifact: windows-arm64.exe
            use_cross: false

          # -------- macOS --------
          - os: macos-14
            target: x86_64-apple-darwin
            artifact: macos-amd64
            use_cross: false
          - os: macos-14
            target: aarch64-apple-darwin
            artifact: macos-arm64
            use_cross: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Rust toolchain setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.target }}
          override: true

      - name: Install dependencies (only for Linux)
        if: matrix.use_cross == true
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build project
        run: |
          if [[ "${{ matrix.use_cross }}" == "true" ]]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi
        shell: bash

      - name: Package binary
        run: |
          EXT=""
          case "${{ matrix.os }}" in
            windows-*) EXT=".exe" ;;
          esac
          mkdir -p dist
          cp target/${{ matrix.target }}/release/$BINARY_NAME$EXT dist/${{ matrix.artifact }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: dist/${{ matrix.artifact }}
