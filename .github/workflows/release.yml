---
name: Release Binaries
on:
  release:
    types: [created]
env:
  BINARY_NAME: habit-tracker
  CARGO_TERM_COLOR: always
jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest   # Linux (glibc)
            cross: true
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest   # Linux (static MUSL)
            cross: true
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest   # Linux (arm64)
            cross: true
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest   # Linux (arm64 static MUSL)
            cross: true
            target: aarch64-unknown-linux-musl
          - os: windows-latest
            cross: false
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            cross: false
            target: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - run: rustup update stable && rustup default stable && rustup target add ${{ matrix.target }}
      - name: Install cross
        if: ${{ matrix.cross }}
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Build project
        shell: bash
        run: |
          if [[ "${{ matrix.cross }}" == "true" ]]; then
            cross build --target ${{ matrix.target }} --release
          else
            cargo build --release --target ${{ matrix.target }} --locked
          fi
      - name: Package
        shell: bash
        run: |
          BIN_NAME=habit-tracker
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.os }}" == windows-latest ]]; then
            7z a ../../../${BIN_NAME}-${{ matrix.target }}.zip ${BIN_NAME}.exe
          else
            tar -czf ../../../${BIN_NAME}-${{ matrix.target }}.tar.gz ${BIN_NAME}
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            *.zip
            *.tar.gz

  upload-artifacts:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - name: Upload to GitHub Release
        run:
          gh release upload ${{ github.event.release.tag_name }} artifacts/* --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
